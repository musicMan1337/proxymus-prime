user nobody;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /usr/local/openresty/nginx/conf/mime.types;
    default_type application/octet-stream;

    # DNS resolver for Docker internal DNS
    resolver 127.0.0.11 valid=30s;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'session_id="$session_id" backend="$upstream_addr"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstream backend servers
    upstream backend_servers {
        least_conn;  # Load balancing method
        include /etc/nginx/servers.conf;  # Load servers from external file
    }

    # Redis connection settings
    lua_shared_dict redis_cluster_dict 128k;

    # Initialize Redis connection
    init_by_lua_block {
        local redis = require "resty.redis"
        redis_host = "redis"
        redis_port = 6379
        redis_timeout = 1000  -- 1 second
    }

    server {
        listen 80;
        server_name _;

        # Variables for session management
        set $session_id "";
        set $session_data "";
        set $backend_server "";

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Session management endpoint
        location /session {
            content_by_lua_file /etc/nginx/lua/session_manager.lua;
        }

        # Main proxy location
        location / {
            access_by_lua_file /etc/nginx/lua/access_handler.lua;

            # Proxy settings
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Session headers
            proxy_set_header X-Session-Id $session_id;
            proxy_set_header X-Session-Data $session_data;

            # Connection settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;

            # Handle backend response and update session
            header_filter_by_lua_file /etc/nginx/lua/header_filter.lua;
        }

        # Maintenance mode (for rolling deployments)
        location /maintenance {
            return 503 "Service temporarily unavailable\n";
            add_header Content-Type text/plain;
        }
    }

    # Include additional configurations
    include /etc/nginx/conf.d/*.conf;
}
